import{_ as a,c as i,a4 as e,o as t}from"./chunks/framework.NOSrbWr_.js";const c=JSON.parse('{"title":"配置","description":"","frontmatter":{"order":3,"title":"配置"},"headers":[],"relativePath":"zh-Hans/book/maintenance/config.md","filePath":"zh-Hans/book/maintenance/config.md"}'),n={name:"zh-Hans/book/maintenance/config.md"};function l(h,s,p,d,r,k){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h1><h2 id="常见配置参考" tabindex="-1">常见配置参考 <a class="header-anchor" href="#常见配置参考" aria-label="Permalink to &quot;常见配置参考&quot;">​</a></h2><h3 id="模糊音设置" tabindex="-1">模糊音设置 <a class="header-anchor" href="#模糊音设置" aria-label="Permalink to &quot;模糊音设置&quot;">​</a></h3><p>编辑 <code>moran.yaml</code> 中的 <code>algebra/user_sentence_top</code> 部分：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">algebra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  user_sentence_top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    __append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      __patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # ... 其他内容略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">moran_defs:/bufen/z_zh</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 不分 z 和 zh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">moran_defs:/bufen/c_ch</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 不分 c 和 ch</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">moran_defs:/bufen/s_sh</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 不分 s 和 sh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">moran_defs:/bufen/n_l</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 不分 n 和 l</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">moran_defs:/bufen/h_f</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 不分 h 和 f</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">moran_defs:/bufen/in_ing</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 不分 in 和 ing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">moran_defs:/bufen/en_eng</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 不分 en 和 eng</span></span></code></pre></div><p>无需全部保留，只需要保留自己想要的模糊音对应的行。</p><h3 id="恢复老自然码的-u-打法-jv-qv-xv-yv" tabindex="-1">恢复老自然码的 ü 打法（jv qv xv yv） <a class="header-anchor" href="#恢复老自然码的-u-打法-jv-qv-xv-yv" aria-label="Permalink to &quot;恢复老自然码的 ü 打法（jv qv xv yv）&quot;">​</a></h3><p>编辑 <code>moran.yaml</code> 中的 <code>algebra/user_sentence_top</code> 部分：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">algebra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  user_sentence_top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    __append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      __patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">moran_defs:/classic_zrm_jqx</span></span></code></pre></div><h3 id="挂接用法" tabindex="-1">挂接用法 <a class="header-anchor" href="#挂接用法" aria-label="Permalink to &quot;挂接用法&quot;">​</a></h3><p>挂接用法指码表输出总是优先于整句输出。</p><h4 id="默认模式设置" tabindex="-1">默认模式设置 <a class="header-anchor" href="#默认模式设置" aria-label="Permalink to &quot;默认模式设置&quot;">​</a></h4><p>编辑 <code>moran.custom.yaml</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  switches/@5/reset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  moran/show_chars_anyway</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  moran/show_words_anyway</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><h4 id="辅筛模式设置" tabindex="-1">辅筛模式设置 <a class="header-anchor" href="#辅筛模式设置" aria-label="Permalink to &quot;辅筛模式设置&quot;">​</a></h4><p>转到<a href="./../schemas/fushai/features.html#挂接固定码表">对应章节</a>。</p><h2 id="技术细节" tabindex="-1">技术细节 <a class="header-anchor" href="#技术细节" aria-label="Permalink to &quot;技术细节&quot;">​</a></h2><p>与一般的 Rime 配置不同，本项目为了减少代码重复，各方案中共通的部分被提取到一个额外的文件 moran.yaml 中。</p><p>该文件定义了如下几个部分：</p><ul><li><code>algebra</code>：各魔然方案共享的<a href="https://github.com/rime/home/wiki/SpellingAlgebra" target="_blank" rel="noreferrer">拼写运算</a>（spelling algebra）设定。</li><li><code>key_bindings</code>：各方案共享的快捷键设定。</li><li><code>octagram</code>：八股文语言模型插件相关配置。</li></ul><h3 id="拼写运算" tabindex="-1">拼写运算 <a class="header-anchor" href="#拼写运算" aria-label="Permalink to &quot;拼写运算&quot;">​</a></h3><p>魔然的拼写运算框架把拼写运算划分成了 5 个阶段：</p><ol><li><code>user_force_top</code></li><li><code>user_force_bottom</code></li><li><code>generate_code</code></li><li><code>user_sentence_bottom</code></li><li><code>user_force_bottom</code></li></ol><p>该框架主要是为了减少重复代码。例如，要在手机上实现 19 键布局，则键位映射应该注入到所有方案中，而飞键映射只能用在类整句方案中。</p><p>五个阶段依次从上到下运行。不同方案使用其中不同的设置：</p><table tabindex="0"><thead><tr><th>方案</th><th>user_force_top</th><th>user_force_bottom</th><th>generate_code</th><th>user_sentence_bottom</th><th>user_force_bottom</th></tr></thead><tbody><tr><td>魔然</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>整句</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>字词</td><td>✅</td><td>❌</td><td>❌</td><td>❌</td><td>✅</td></tr><tr><td>辅筛</td><td>✅</td><td>✅</td><td>❌</td><td>✅</td><td>✅</td></tr></tbody></table><ul><li>只有 <code>user_force_top</code> 和 <code>user_force_bottom</code> 会注入到所有方案中。</li><li>辅筛模式使用特殊的编码生成逻辑。</li></ul>`,27)]))}const E=a(n,[["render",l]]);export{c as __pageData,E as default};
