import{_ as d,c as a,a4 as e,o as r}from"./chunks/framework.NOSrbWr_.js";const c=JSON.parse('{"title":"输入方法","description":"","frontmatter":{"order":1,"title":"输入方法"},"headers":[],"relativePath":"zh-Hans/book/schemas/zici/input.md","filePath":"zh-Hans/book/schemas/zici/input.md"}'),i={name:"zh-Hans/book/schemas/zici/input.md"};function l(o,t,s,h,p,n){return r(),a("div",null,t[0]||(t[0]=[e('<h1 id="输入方法" tabindex="-1">输入方法 <a class="header-anchor" href="#输入方法" aria-label="Permalink to &quot;输入方法&quot;">​</a></h1><h2 id="单字输入方法" tabindex="-1">单字输入方法 <a class="header-anchor" href="#单字输入方法" aria-label="Permalink to &quot;单字输入方法&quot;">​</a></h2><p>假设一个单字的全码是 SYFF，则这个单字可能的编码是：</p><table><thead><tr><th width="133">类型</th><th width="90">编码</th><th>例字</th></tr></thead><tbody><tr><td>一级简码</td><td>S</td><td>的 d</td></tr><tr><td>二级简码</td><td>SY</td><td>得 de</td></tr><tr><td>三级简码</td><td>SYF</td><td>发 fai</td></tr><tr><td>全码</td><td>SYFF</td><td>治 vidt</td></tr></tbody></table><p><strong>大部分字只有唯一的打法</strong>：如果它是简码字，那么它就没有全码打法。称作「出简不出全」。因此<strong>每个字的打法都需要在记忆的基础上使用</strong>。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>默认模式中总可以使用全码输入一个字，而字词模式则不然。</p></div><p>少部分字虽然是简码字，但也有其他打法：</p><ul><li>一些二简字也有三简打法，这是因为其对应的三简编码为空，提高容错度。</li><li>一些三简字也有全码打法，但后置。（称作「出简让全」）</li><li>一些字有特殊打法，如无理码。</li></ul><h3 id="必须特殊记忆的单字无理码" tabindex="-1">必须特殊记忆的单字无理码 <a class="header-anchor" href="#必须特殊记忆的单字无理码" aria-label="Permalink to &quot;必须特殊记忆的单字无理码&quot;">​</a></h3><ul><li>所有无理码<strong>仍收录有理码</strong>，避免遗忘时打不出字。</li><li>含有这些字的<strong>词语</strong>也均有对应的<strong>有理码</strong>，但会<strong>后置</strong>。 <ul><li>jihu 的首选是「嵇」，「几乎」后置到次选；应该使用 johu 输入「几乎」。</li></ul></li></ul><table><thead><tr><th width="132">字</th><th width="179">无理码</th><th>有理码</th></tr></thead><tbody><tr><td>几</td><td>jo</td><td>jiyd</td></tr><tr><td>几</td><td>jop</td><td>jip</td></tr></tbody></table><table><thead><tr><th width="132">字</th><th width="179">无理码</th><th>有理码</th></tr></thead><tbody><tr><td>几</td><td>jo</td><td>jip</td></tr></tbody></table><h3 id="飞键" tabindex="-1">飞键 <a class="header-anchor" href="#飞键" aria-label="Permalink to &quot;飞键&quot;">​</a></h3><p>所谓的「飞键」就是给一些难打的双拼组合一个新的打法。和默认模式一样，字词模式同样内置了这两个飞键。飞键是完全的可选功能。</p><table tabindex="0"><thead><tr><th>原双拼</th><th>飞键后的双拼</th><th>例子</th></tr></thead><tbody><tr><td>qx</td><td>qo</td><td>切qxd -&gt; qod</td></tr><tr><td>xq</td><td>xo</td><td>维修wzxq -&gt; wzxo</td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">INFO</p><p>字词模式的飞键写死在码表 <code>moran_fixed.dict.yaml</code> 和 <code>moran_fixed_simp.dict.yaml</code> 里。</p><p>要生成新的飞键编码，可以使用 tools/flykey.py。</p><p>要删除飞键编码，只需编辑码表文件删去对应编码即可。</p></div><h3 id="单字编码练习" tabindex="-1">单字编码练习 <a class="header-anchor" href="#单字编码练习" aria-label="Permalink to &quot;单字编码练习&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p>下面的题目中，有些字没有全码打法。</p><p>可以切换到字词模式实际操作后再作答。</p></div><details><summary>输入：「平」</summary><p>p，「平」是一简字</p></details><details><summary>输入：「乐」</summary><p>le，「乐」是二简字</p></details><details><summary>输入：「拿」</summary><p>nau，「拿」是三简字</p></details><details><summary>输入：「妳」</summary><p>nine，「妳」是全码字</p></details><h2 id="词语输入方法" tabindex="-1">词语输入方法 <a class="header-anchor" href="#词语输入方法" aria-label="Permalink to &quot;词语输入方法&quot;">​</a></h2><p>词语中的每个字的编码用 Aaaa, Bbbb, Cccc 表示，则编码规则可表示为：</p><table tabindex="0"><thead><tr><th>词语字数</th><th>编码方式</th><th>例子</th></tr></thead><tbody><tr><td>2</td><td>AaBb</td><td>你好 nihk</td></tr><tr><td>3</td><td>ABCc</td><td>不知道 bvdk</td></tr><tr><td>&gt;=4</td><td>ABCZ &quot;前三末一&quot;</td><td>醉翁之意不在酒 zwvj</td></tr></tbody></table><h3 id="词语编码练习" tabindex="-1">词语编码练习 <a class="header-anchor" href="#词语编码练习" aria-label="Permalink to &quot;词语编码练习&quot;">​</a></h3><details><summary>练习：给出「三体」的编码（四个字母）</summary><p>sjti</p><p>根据第一条规则，取两个字的双拼码</p></details><details><summary>练习：给出「叶文洁」的编码（四个字母）</summary><p>ywjx</p><p>根据第二条规则，前两个字取首码，最后一字取完整的双拼码</p></details><details><summary>练习：给出「降维打击」的编码（四个字母）</summary><p>jwdj</p><p>根据最后一条规则，取每个字的首码</p></details><details><summary>练习：给出「地球三体组织」的编码（四个字母）</summary><p>dqsv</p><p>根据最后一条规则，取前三字和最后一字的首码</p></details><details><summary>试讨论：如果尝试打了某个词，但这个词不存在，或者码表中存在的是另一个词，应该怎么办？</summary><ol><li>可以使用造词功能，或编辑码表增加该词。</li><li>逐字输入这个词。</li></ol><p>一般来说，除非某个词真的很常用，否则通常更推荐逐字输入的方法。在熟悉单字编码后，逐字输入的速度一般会比打两字词更快。这是因为字的数量少，编码更容易熟悉，所以击键速度更快，也不用担心这个词是否存在，故而综合来说会更快一些。对于超长的多字词，一般打词更快，但需要付出记忆成本，需要自己权衡。</p></details>',31)]))}const u=d(i,[["render",l]]);export{c as __pageData,u as default};
