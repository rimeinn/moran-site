import{_ as e,c as a,a4 as o,o as d}from"./chunks/framework.NOSrbWr_.js";const i="/assets/image%20(84).Q_SUivmc.png",s="/assets/image%20(85).BXXzyHMP.png",c="/assets/image%20(89).BdtC9Hbi.png",f=JSON.parse('{"title":"特性说明","description":"","frontmatter":{"order":2,"title":"特性说明"},"headers":[],"relativePath":"zh-Hans/book/schemas/zici/features.md","filePath":"zh-Hans/book/schemas/zici/features.md"}'),r={name:"zh-Hans/book/schemas/zici/features.md"};function l(n,t,h,p,m,u){return d(),a("div",null,t[0]||(t[0]=[o('<h1 id="特性说明" tabindex="-1">特性说明 <a class="header-anchor" href="#特性说明" aria-label="Permalink to &quot;特性说明&quot;">​</a></h1><h2 id="反查" tabindex="-1">反查 <a class="header-anchor" href="#反查" aria-label="Permalink to &quot;反查&quot;">​</a></h2><table tabindex="0"><thead><tr><th>反查方式</th><th>编码</th><th>例子</th></tr></thead><tbody><tr><td><code>SY``</code></td><td>依双拼反查形辅</td><td><code>yj``</code> 可查得「言演」等字</td></tr><tr><td><code>``FF</code></td><td>依形辅反查读音</td><td><code>``cm</code> 可查得「叶茶」等字</td></tr></tbody></table><p>反查只能反查到码表中的所有打法，而无法查到全码。如欲查询全码和拆分，可切换到「魔然」模式。</p><h2 id="次选键" tabindex="-1">次选键 <a class="header-anchor" href="#次选键" aria-label="Permalink to &quot;次选键&quot;">​</a></h2><p>分号 <code>;</code> 为次选键，等价于按数字键 <code>2</code>。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>默认模式的分号不等价于 <code>2</code>。</p></div><h2 id="手动造词键" tabindex="-1">手动造词键 <a class="header-anchor" href="#手动造词键" aria-label="Permalink to &quot;手动造词键&quot;">​</a></h2><p>引号 <code>&#39;</code> 为字词模式的手动造词键。</p><ul><li>当输入 <code>&#39;</code> 后，输入框提示 〔造词〕，此时可输入词语编码，字与字之间使用 <code>&#39;</code> （引号）隔开。️</li><li>如果单字有重码，可以像一般的拼音输入法一样选字。</li><li>输入上屏后，上屏的词语会被记录到字词模式的用户词库中，之后可依据通常的多字词规则输入该词语。</li><li>如果用户造词与系统词的编码重复，则用户词后置。</li></ul><p>以「君不见黄河之水天上来」为例，造词后，可使用正常的多字词编码 <code>jbjl</code> 输入该词语。</p><figure><img src="'+i+`" alt=""><figcaption></figcaption></figure><h2 id="自动造词-根据上屏历史" tabindex="-1">自动造词（根据上屏历史） <a class="header-anchor" href="#自动造词-根据上屏历史" aria-label="Permalink to &quot;自动造词（根据上屏历史）&quot;">​</a></h2><p>Rime 支持根据上屏历史自动造词，换句话说，如果你连续输入了「曾」「国」「藩」三字，则会自动造出一则临时词「曾国藩」。该功能默认关闭。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>临时词具有 ☯️ 标记，选择一次后，临时词转为永久词，失去该标记。</p><p>同码的临时词数量有限，老临时词有可能被新的临时词覆盖掉。</p></div><p>要开启此功能，编辑 <code>moran_fixed.custom.yaml</code> 并输入如下内容：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  fixed/encode_commit_history</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><h2 id="连续上屏" tabindex="-1">连续上屏 <a class="header-anchor" href="#连续上屏" aria-label="Permalink to &quot;连续上屏&quot;">​</a></h2><p>使用 <code>=</code> 键可呼出上次上屏内容。如输入 <code>nihk</code> 上屏「你好」后，按 <code>=</code> 可得到如下候选列表：</p><figure><img src="`+s+'" alt=""><figcaption></figcaption></figure><p>在 <code>moran_fixed.schema.yaml</code> 中提供了长按 <code>=</code> 连续上屏的默认设置，搜索 <code>custom_bindings</code> 后可找到相关内容，解除注释就可以双击 <code>=</code> 重复上屏上次的输入。</p><figure><img src="'+c+'" alt=""><figcaption></figcaption></figure><p>注意：这里的 <code>4</code> 与 <code>symbols.yaml</code> 中的设置高度相关，仅在默认配置中有意义。如果修改了 <code>symbols.yaml</code> 的 <code>=</code> 相关设置，则这里的 <code>4</code> 也大概率需要做对应的变更。</p><h2 id="o-引导的符号" tabindex="-1">o 引导的符号 <a class="header-anchor" href="#o-引导的符号" aria-label="Permalink to &quot;o 引导的符号&quot;">​</a></h2><table tabindex="0"><thead><tr><th>种类</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>os</td><td>数字</td><td>①②</td></tr><tr><td>ob</td><td>制表符</td><td>┌├</td></tr><tr><td>（and more……TBD）</td><td></td><td></td></tr></tbody></table>',25)]))}const g=e(r,[["render",l]]);export{f as __pageData,g as default};
