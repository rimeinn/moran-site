import{_ as i,a as o,b as t,c as e,d as r}from"./chunks/CleanShot 2024-11-19 at 20.14.43@2x.CWLapx9K.js";import{_ as s,c,a4 as p,o as l}from"./chunks/framework.NOSrbWr_.js";const k=JSON.parse('{"title":"自定义短语","description":"","frontmatter":{"title":"自定义短语","order":5},"headers":[],"relativePath":"zh-Hans/book/maintenance/custom-phrase.md","filePath":"zh-Hans/book/maintenance/custom-phrase.md"}'),n={name:"zh-Hans/book/maintenance/custom-phrase.md"};function m(d,a,h,u,f,g){return l(),c("div",null,a[0]||(a[0]=[p('<h1 id="自定义短语" tabindex="-1">自定义短语 <a class="header-anchor" href="#自定义短语" aria-label="Permalink to &quot;自定义短语&quot;">​</a></h1><p>自定义短语是公共功能，为所有魔然方案共享。<strong>总是出现在任何其他候选之前。</strong></p><p>编辑 <code>moran_custom_phrases.txt</code> 可增减新的自定义短语。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>在默认模式中，由于自定义短语不被视作简码，因此不会带有简码提示符，如⚡。</p><p>在<a href="./../schemas/zici/">字词模式</a>中，最大码长的优先级超过自定义短语，因此超过 4 码的自定义短语无法输入。</p></div><h2 id="pin-置顶功能" tabindex="-1">Pin 置顶功能 <a class="header-anchor" href="#pin-置顶功能" aria-label="Permalink to &quot;Pin 置顶功能&quot;">​</a></h2><p>自 20241119 版本起，可通过置顶功能实现部分自定义短语的功能。</p><h3 id="候选置顶" tabindex="-1">候选置顶 <a class="header-anchor" href="#候选置顶" aria-label="Permalink to &quot;候选置顶&quot;">​</a></h3><p>将光标移动到想要置顶的候选上，按 Ctrl-t 即可。</p><ul><li>被置顶的候选默认具有「📌」标记（可修改）。</li><li>在被置顶的候选上再次按 Ctrl-t 可以取消置顶。</li></ul><p>但置顶候选<strong>仅在完整匹配当前输入时</strong>才会生效。在下面的例子中，输入 lmj, lm, l, 甚至 lmjxf 都不会置顶「连接」。</p><figure><img src="'+i+'" alt=""><figcaption></figcaption></figure><figure><img src="'+o+'" alt=""><figcaption></figcaption></figure><div class="info custom-block"><p class="custom-block-title">INFO</p><p>值得一提的是，被置顶的词语可以正确参与词频计算。</p></div><h3 id="「万灵药」加词功能" tabindex="-1">「万灵药」加词功能 <a class="header-anchor" href="#「万灵药」加词功能" aria-label="Permalink to &quot;「万灵药」加词功能&quot;">​</a></h3><p>「万灵药」加词利用 Pin 的原理实现类似自定义短语的功能，且无需打开编辑 moran_custom_phrases.txt。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>该功能不会修改 moran_custom_phrases.txt，而会将词语记忆到非纯文本的 moran_pin.userdb 数据库中。</p><p>但无需担心需要手动迁移数据——该数据库可以通过 Rime 同步功能在多设备间同步。</p></div><p>使用方法：输入 <code>目标编码//候选对应编码</code> 后按空格。</p><p>如输入 <code>hello//nihk</code> 后：</p><figure><img src="'+t+'" alt=""><figcaption></figcaption></figure><p>再按空格，会进入「候选对应编码」的翻译过程：</p><figure><img src="'+e+'" alt=""><figcaption></figcaption></figure><p>此时再按空格确认输入，即可成功加词。再次输入 hello 确认：</p><figure><img src="'+r+'" alt=""><figcaption></figcaption></figure><h4 id="自由模式" tabindex="-1">自由模式 <a class="header-anchor" href="#自由模式" aria-label="Permalink to &quot;自由模式&quot;">​</a></h4><p>自定义短语中可能想包含非汉字的其他字符，如 「A4纸」。</p><p>设置 <code>moran/pin/panacea/freestyle: true</code> 后，加词流程会有所变化：</p><ol><li>直接输入 <code>编码//</code> 空格开始加词流程。</li><li>之后用正常的输入方法输入任何字符，均会被增加到词中。</li><li>再次输入 <code>x//</code> 空格完成加词。</li></ol>',27)]))}const x=s(n,[["render",m]]);export{k as __pageData,x as default};
