import{_ as e,c as o,a4 as t,o as i}from"./chunks/framework.NOSrbWr_.js";const u=JSON.parse('{"title":"更新","description":"","frontmatter":{"title":"更新","order":2},"headers":[],"relativePath":"zh-Hans/book/maintenance/update.md","filePath":"zh-Hans/book/maintenance/update.md"}'),l={name:"zh-Hans/book/maintenance/update.md"};function c(d,a,r,n,s,m){return i(),o("div",null,a[0]||(a[0]=[t('<h1 id="更新" tabindex="-1">更新 <a class="header-anchor" href="#更新" aria-label="Permalink to &quot;更新&quot;">​</a></h1><h2 id="使用「东风破」自动更新" tabindex="-1">使用「东风破」自动更新 <a class="header-anchor" href="#使用「东风破」自动更新" aria-label="Permalink to &quot;使用「东风破」自动更新&quot;">​</a></h2><p>重新运行东风破安装命令可自动更新用户文件夹中的配置到最新版。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>会覆盖掉 <code>moran.yaml</code>、<code>moran*.{schema,dict}.yaml</code> 等文件。如果您修改了这些文件并希望保留相关修改，则建议手动更新。</p></div><h2 id="手动更新" tabindex="-1">手动更新 <a class="header-anchor" href="#手动更新" aria-label="Permalink to &quot;手动更新&quot;">​</a></h2><p>您需要借助原<a href="./../maintenance/install.html">下载</a>渠道，下载新版，并合并更新到本地用户目录中。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>数据无价，请在覆盖任何数据前小心再小心！</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>比较保险的方法是：把原来的用户目录挪走，然后原地创建一个新文件夹，安装新版，然后把原来的修改复制回去。</p></div><h2 id="重要数据列表" tabindex="-1">重要数据列表 <a class="header-anchor" href="#重要数据列表" aria-label="Permalink to &quot;重要数据列表&quot;">​</a></h2><p>在合并修改之前，请特别注意备份如下文件：</p><ul><li>用户词库：<code>moran.userdb</code> （目录）、<code>moran_fixed.txt</code>、<code>moran_fixed_simp.txt</code></li><li>自定义短语文件：<code>moran_custom_phrases.txt</code></li><li>配置自定义：任何文件名以 <code>.custom.yaml</code> 结尾的文件</li></ul><p>如果修改了其他文件，也建议一并备份，特别是：</p><ul><li>共享配置：<code>moran.yaml</code></li><li>简码词库：<code>moran_fixed.dict.yaml</code>, <code>moran_fixed_simp.dict.yaml</code></li></ul><h2 id="使用-git-更新" tabindex="-1">使用 Git 更新 <a class="header-anchor" href="#使用-git-更新" aria-label="Permalink to &quot;使用 Git 更新&quot;">​</a></h2><p>如果您使用 Git 追踪最新 master 分支，推荐的使用方式是：</p><ul><li><code>git commit</code> 记录本地修改。</li><li><code>git pull</code> 拉取新更新，<code>git</code> 会自动与本地修改合并。 <ul><li>若有修改冲突，可以较容易地定位并修改。</li></ul></li></ul>',16)]))}const h=e(l,[["render",c]]);export{u as __pageData,h as default};
