import{_ as d,c as e,a4 as a,o}from"./chunks/framework.NOSrbWr_.js";const b=JSON.parse('{"title":"方案生成工具","description":"","frontmatter":{"order":10,"title":"方案生成工具"},"headers":[],"relativePath":"zh-Hans/book/tools/schemagen/index.md","filePath":"zh-Hans/book/tools/schemagen/index.md"}'),i={name:"zh-Hans/book/tools/schemagen/index.md"};function c(r,t,s,n,p,l){return o(),e("div",null,t[0]||(t[0]=[a(`<h1 id="方案生成工具" tabindex="-1">方案生成工具 <a class="header-anchor" href="#方案生成工具" aria-label="Permalink to &quot;方案生成工具&quot;">​</a></h1><p>本项目提供一个强大的方案生成工具 tools/schemagen.py，可满足方案生成和维护的诸多需求。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>该工具不随方案打包分发，请从 <a href="https://github.com/rimeinn/rime-moran/blob/main/tools/schemagen.py" target="_blank" rel="noreferrer">GitHub repo</a> 上获取。</p></div><h2 id="通用参数" tabindex="-1">通用参数 <a class="header-anchor" href="#通用参数" aria-label="Permalink to &quot;通用参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th>参数</th><th>取值</th><th>说明</th></tr></thead><tbody><tr><td><code>--double-pinyin</code></td><td>zrm 或 flypy，默认 zrm</td><td>双拼方案</td></tr><tr><td><code>--auxiliary-code</code></td><td>zrm 或 user，默认 zrm</td><td>辅助码方案</td></tr><tr><td><code>--auxiliary-code-fallback</code></td><td>字符串，默认 <code>??</code></td><td>当辅助码表中不存在该字时，使用这个参数作为辅助码</td></tr><tr><td><code>--pinyin-table</code></td><td>文件路径，默认 <code>data/pinyin.txt</code></td><td>字词的拼音和词频</td></tr></tbody></table><details><summary>拼音表文件格式</summary><p>使用 tab 分隔的三列数据，依次是字词、读音和词频。词语的读音可留空，这些读音会被自动生成。例：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>〇	ling	981</span></span>
<span class="line"><span>音乐会	yin yue hui	1361</span></span>
<span class="line"><span>新闻办		718</span></span></code></pre></div></details><details><summary>预置拼音表</summary><ul><li><code>data/pinyin.txt</code> 繁体数据，来自 Rime 八股文和朙月拼音</li><li><code>data/pinyin_simp.txt</code> 简体数据，来自 Rime 八股文和 pinyin_simp</li></ul></details><div class="info custom-block"><p class="custom-block-title">INFO</p><p>在处理简化字方案时，通常需要设定 pinyin-table 参数。</p></div><h2 id="命令-gen-chars" tabindex="-1">命令 gen-chars <a class="header-anchor" href="#命令-gen-chars" aria-label="Permalink to &quot;命令 gen-chars&quot;">​</a></h2><p>用于生成 <code>moran.chars.dict.yaml</code> 格式的文件。</p><p>直接使用拼音表数据。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schemagen.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gen-chars</span></span></code></pre></div><h2 id="命令-gen-dict" tabindex="-1">命令 gen-dict <a class="header-anchor" href="#命令-gen-dict" aria-label="Permalink to &quot;命令 gen-dict&quot;">​</a></h2><p>用于生成整句词库，格式类似 <code>moran.base.dict.yaml</code>。</p><p>在产生读音时：首先使用词库中的读音，若无，则会自动注音。自动注音过程可以调用 opencc 先进行简繁转换（因为所用注音库要求输入是简化字）。</p><p>在产生词频时：首先使用词库中的词频，若无，则会取 0。</p><table tabindex="0"><thead><tr><th>参数</th><th>取值</th><th>说明</th></tr></thead><tbody><tr><td><code>--input-dict</code></td><td><strong>必须</strong> 文件路径</td><td>pinyin-table 格式的词库</td></tr><tr><td><code>--opencc-for-pinyin</code></td><td>文件名，默认 <code>t2s.json</code></td><td>在注音前简繁转换，默认繁转简</td></tr><tr><td><code>--opencc-for-output</code></td><td>文件名，默认为空</td><td>在输出词语前简繁转换，默认不转换</td></tr><tr><td><code>--compact</code></td><td></td><td>不保留容错码，只使用主码产生词典</td></tr><tr><td><code>--no-freq</code></td><td></td><td>不输出词频</td></tr><tr><td><code>--freq-scale</code></td><td>浮点数，默认 1.0</td><td>在输出词频时，可以乘上一个因子放大或缩小词频</td></tr></tbody></table><details><summary>输入词库格式</summary><p>完整格式应是 pinyin-table 格式，即三个数据分别是词、读音、词频。</p><p>词库读入时对两列数据的情况做了兼容，同时支持词、读音和词、词频两种格式。即支持如下格式：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>你好	ni hao</span></span>
<span class="line"><span>再见	123</span></span></code></pre></div></details><h2 id="命令-gen-fixed" tabindex="-1">命令 gen-fixed <a class="header-anchor" href="#命令-gen-fixed" aria-label="Permalink to &quot;命令 gen-fixed&quot;">​</a></h2><p>该命令用于生成简码码表。</p><p>简码码表生成的逻辑：</p><ul><li>首先依次产生所有字的全码，然后逐级尝试把字放入一级、二级、三级简码位。每个简码位最多容纳（tolerance 参数设定的数字）个简码。</li><li>词语和全码词放在，并依据词频统一排序。</li></ul><p>若不指定 <code>--short-word</code> 则不生成简词。简词生成的逻辑：</p><ul><li>给每个词语产生几种特定的短码： <ul><li>二字词，使用两个字的首码产生二简码</li><li>三字词，使用三个字的首码产生三简码</li></ul></li><li>然后将该简词码像简字码一样，逐级尝试放入简码位</li></ul><table tabindex="0"><thead><tr><th>参数</th><th>取值</th><th>说明</th></tr></thead><tbody><tr><td><code>--charset</code></td><td><strong>建议设置</strong> 文件路径，默认 <code>data/trad_chars.txt</code></td><td>设定码表中的单字</td></tr><tr><td><code>--input-dict</code></td><td><strong>建议设置</strong> 文件路径</td><td>与 gen-dict 命令使用相同的词库格式；设定码表中的词语</td></tr><tr><td><code>--format</code></td><td><strong>建议设置</strong> code-words 或 code-word 或 word-code 或 word-codes</td><td>输出码表格式</td></tr><tr><td><code>--opencc-for-pinyin</code></td><td>文件名，默认 <code>t2s.json</code></td><td>（与 gen-dict 命令相同）注音时使用的简繁转换设定</td></tr><tr><td><code>--tolerance</code></td><td>逗号分隔的3个数字，默认 1,1,1</td><td>每级简码可以容纳几个简码</td></tr><tr><td><code>--short-word</code></td><td></td><td>是否生成简词</td></tr></tbody></table><h2 id="命令-update-compact-dict" tabindex="-1">命令 update-compact-dict <a class="header-anchor" href="#命令-update-compact-dict" aria-label="Permalink to &quot;命令 update-compact-dict&quot;">​</a></h2><p>根据最新的 zrmdb 定义，更新 compact 词库中的辅助码部分。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>这个命令可用于将繁体词库自动转换成简体词库后，再更新辅助码。</p><p>具体用法可参照 <code>tools/update_compact_dicts.sh。</code></p></div><table tabindex="0"><thead><tr><th>参数</th><th>取值</th><th>说明</th></tr></thead><tbody><tr><td><code>--rime-dict</code></td><td><strong>必须</strong> 文件名</td><td>Rime 词库</td></tr></tbody></table><h2 id="命令-update-char-weight" tabindex="-1">命令 update_char_weight <a class="header-anchor" href="#命令-update-char-weight" aria-label="Permalink to &quot;命令 update\\_char\\_weight&quot;">​</a></h2><p>根据最新 pinyin-table，更新 chars 码表的词频。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>这个命令可用于将繁体字表自动转换成简体字表后，再更新辅助码。</p><p>具体用法可参照 <code>make_simp_dist.sh</code>。</p></div><table tabindex="0"><thead><tr><th>参数</th><th>取值</th><th>说明</th></tr></thead><tbody><tr><td><code>--rime-dict</code></td><td><strong>必须</strong> 文件名</td><td>Rime 词库</td></tr></tbody></table><h2 id="命令-update-sp" tabindex="-1">命令 update_sp <a class="header-anchor" href="#命令-update-sp" aria-label="Permalink to &quot;命令 update\\_sp&quot;">​</a></h2><p>根据最新 pinyin-table，重新修改词的双拼部分。</p><table tabindex="0"><thead><tr><th>参数</th><th>取值</th><th>说明</th></tr></thead><tbody><tr><td><code>--rime-dict</code></td><td><strong>必须</strong> 文件名</td><td>Rime 词库</td></tr><tr><td><code>--find</code></td><td><strong>必须</strong> 字符串</td><td>只更新含有这些字的词</td></tr></tbody></table><p>例如，更新只含「朝」字的词语的读音：<code>update-sp --find &quot;朝&quot;</code></p><h2 id="命令-convert-sp" tabindex="-1">命令 convert_sp <a class="header-anchor" href="#命令-convert-sp" aria-label="Permalink to &quot;命令 convert\\_sp&quot;">​</a></h2><p>转换词库的双拼方案为其他方案。可以将本方案的自然码双拼转换成其他双拼。</p><p>输入双拼方案由<a href="./#通用参数">通用参数</a>中的 <code>--double-pinyin</code> 指定，输出方案由 <code>--to</code> 指定。</p><table tabindex="0"><thead><tr><th>参数</th><th>取值</th><th>说明</th></tr></thead><tbody><tr><td><code>--rime-dict</code></td><td><strong>必须</strong> 文件名</td><td>Rime 词库</td></tr><tr><td><code>--to</code></td><td><strong>必须</strong> 支持的双拼</td><td>目标双拼方案</td></tr></tbody></table><h2 id="命令-convert-fixed-sp" tabindex="-1">命令 convert_fixed_sp <a class="header-anchor" href="#命令-convert-fixed-sp" aria-label="Permalink to &quot;命令 convert\\_fixed\\_sp&quot;">​</a></h2><p>转换固定码表的双拼方案为其他方案。可以将本方案的自然码双拼转换成其他双拼。</p><p>输入双拼方案由<a href="./#通用参数">通用参数</a>中的 <code>--double-pinyin</code> 指定，输出方案由 <code>--to</code> 指定。</p><table tabindex="0"><thead><tr><th>参数</th><th>取值</th><th>说明</th></tr></thead><tbody><tr><td><code>--rime-dict</code></td><td><strong>必须</strong> 文件名</td><td>Rime 词库</td></tr><tr><td><code>--to</code></td><td><strong>必须</strong> 支持的双拼</td><td>目标双拼方案</td></tr></tbody></table>`,45)]))}const u=d(i,[["render",c]]);export{b as __pageData,u as default};
